---
#
# Install/run elasticsearch
#


# - name: Dump all vars
#   action: template src=elasticsearch.yml.j2 dest=/tmp/ansible.all

# - name: Display all variables/facts known for a host
#   debug:
#     var: hostvars[inventory_hostname]
#   tags: debug_info

- name: Import GPG-KEY for elasticsearch
  rpm_key:
    state: present
    key: https://packages.elastic.co/GPG-KEY-elasticsearch
  become: true

- name: Install libsemanage-python and dependencies
  yum:
    name: libsemanage-python
  become: true

- name: Copy elasticsearch yum repo file
  copy:
    src=elasticsearch.repo
    dest=/etc/yum.repos.d/elasticsearch.repo
    owner=root
    group=root
    mode=0644
  become: true

- name: Install elasticsearch and openjdk
  yum:
    name: [elasticsearch, java-openjdk-headless]
    state: present
  become: true

- name: Copy templated elasticsearch.yml
  template:
    src=elasticsearch.yml.j2
    dest=/etc/elasticsearch/elasticsearch.yml
    owner=root
    group=elasticsearch
    mode=0660
  become: true
  # register: elasticsearch_updated
  notify: "restart elasticsearch services"
  ignore_errors: true

- name: Check if system memory is greater than 64G
  debug: msg="System memory is {{ansible_memory_mb.real.total | int}} so setting heapsize to 32G upper limit"
  when: ansible_memory_mb.real.total|int >= 65536
  become: true

- name: Apply heapsize start tuning for systems with greater than 64G memory
  lineinfile:
    dest=/etc/elasticsearch/jvm.options
    regexp='^-Xms\d*[m|g]'
    line='-Xms31g'
  when: ansible_memory_mb.real.total|int >= 65536
  # register: elasticsearch_updated
  notify: "restart elasticsearch services"
  become: true

- name: Apply heapsize end tuning for systems with greater than 64G memory
  lineinfile:
    dest=/etc/elasticsearch/jvm.options
    regexp='^-Xmx\d*[m|g]'
    line='-Xmx31g'
  when: ansible_memory_mb.real.total|int >= 65536
  # register: elasticsearch_updated
  notify: "restart elasticsearch services"
  become: true

- name: Print extended documentation for heapsize tuning
  debug: msg="Refer to https://www.elastic.co/guide/en/elasticsearch/guide/current/_limiting_memory_usage.html"
  when: ansible_memory_mb.real.total|int >= 65536
  become: true

- name: Update elasticsearch startup with start heap size
  lineinfile:
    path: /etc/elasticsearch/jvm.options
    regexp: '^-Xms\d*[m|g]'
    line: '-Xms{{ (ansible_memory_mb.real.total / 2) | int }}m'
  when: ansible_memory_mb.real.total|int < 65536
  # register: elasticsearch_updated
  notify: "restart elasticsearch services"
  become: true

- name: Update elasticsearch startup with end heap size
  lineinfile:
    dest: /etc/elasticsearch/jvm.options
    regexp: '^-Xmx\d*[m|g]'
    line: '-Xmx{{ (ansible_memory_mb.real.total / 2) | int }}m'
  when: ansible_memory_mb.real.total|int < 65536
  # register: elasticsearch_updated
  notify: "restart elasticsearch services"
  become: true

# - name: Apply workaround for java listening port
#   raw: setcap 'cap_net_bind_service=+ep' /usr/lib/jvm/java-1.8.*openjdk-*/jre/bin/java
#   become: true

# https://www.centos.org/forums/viewtopic.php?t=16398
# - name: Obtain exact version of JRE for libjli.so workaround
#   shell: "ls /usr/lib/jvm/ | grep java | grep openjdk-1"
#   register: libjli_location
#   become: true

# - name: Apply EL symlink workaround for libjli.so
#   file:
#     src='/usr/lib/jvm/{{libjli_location.stdout}}/jre/lib/amd64/jli/libjli.so'
#     dest='/lib64/libjli.so'
#     state=link
#   become: true

# this seems like a packaging bug for 6.x
- name: Create log directory structure for ES
  file:
    path: /usr/share/elasticsearch/logs
    state: directory
    owner: elasticsearch
    group: elasticsearch
    mode: 0755
  become: true

# another packaging bug, this should be done by RPM
- name: Create datadir for elasticsearch
  file:
    path: /usr/share/elasticsearch/data
    state: directory
    owner: elasticsearch
    group: elasticsearch
    mode: 0755
  become: true

# - debug: msg="{{ elasticsearch_updated.changed }}"


# - name: Restart elasticsearch service
#   systemd: name=elasticsearch state=restarted 
#   ignore_errors: false
#   when: elasticsearch_updated.changed
#   become: true

- name: Start elasticsearch service
  systemd: name=elasticsearch state=started 
  ignore_errors: false
  become: true

- name: Setup elasticsearch service to autostart
  service: name=elasticsearch state=started enabled=true
  become: true

- name: Enable firewall ports
  firewalld:
    port: "{{item}}"
    zone: public
    state: enabled
    permanent: yes
    immediate: yes
  with_list:
    - 9200/tcp
    - 9300/tcp
  tags:
    - fwconfig
    - firewall
  when: manage_firewall
  become: true

# - name: Waits for port 9200 of any IP to close active connections, don't start checking for 10 seconds
#   wait_for:
#     host: 0.0.0.0
#     port: 9200
#     delay: 10
#     state: started # drained / stopped / present / absent