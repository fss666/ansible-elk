---
#
# Install/run nginx
#

- name: Check/Install EPEL Repo for nginx
  yum: name={{epel_repo}}
      state=present
  become: true

- name: Install nginx, httpd-tools, httplib2
  yum:
    name: [nginx, httpd-tools, python-httplib2]
  become: true

# SELinux boolean for nginx
- name: Apply SELinux boolean httpd_can_network_connect
  seboolean: name=httpd_can_network_connect state=yes persistent=yes
  become: true

# create /etc/nginx/conf.d/ directory
- name: Create nginx directory structure
  file: path=/etc/nginx/conf.d/
    state=directory
    mode=0755
  become: true

# deploy kibana.conf with FQDN
- name: Setup nginx reverse proxy for kibana
  template:
    src=kibana.conf.j2
    dest=/etc/nginx/conf.d/kibana.conf
    owner=root
    group=root
    mode=0644
  register: nginx_kibana
  become: true

# deploy basic nginx.conf 8080 vhost
- name: Setup nginx TCP/8080 vhost for SSL certificate
  template:
    src=nginx.conf.j2
    dest=/etc/nginx/nginx.conf
    owner=root
    group=root
    mode=0644
  register: nginx_basic_vhost
  become: true

# - name: debuging varibles
#   debug:
#     var: nginx_basic_vhost

# start nginx service
- name: Start nginx service
  systemd: name=nginx state=started
  register: nginx_started
  become: true

# - name: debuging varibles
#   debug:
#     var: nginx_started


# restart nginx service (only if need)
- name: Restart nginx service (only if need)
  systemd: name=nginx state=restarted
  ignore_errors: true
  when: ((nginx_started.changed == false) and (nginx_kibana.changed or nginx_basic_vhost.changed))
  become: true

- name: Set nginx to start on boot
  systemd: name=nginx enabled=yes
  ignore_errors: true
  become: true

- name: Enable firewall ports
  firewalld:
    port:  "{{ item }}"
    zone: public
    state: enabled
    permanent: yes
    immediate: yes
  with_list:
    - 80/tcp
    - 8080/tcp
  tags:
    - fwconfig
    - firewall
  become: true


# we only want to enable EPEL for some packages
# - name: Remove EPEL Repo
#   yum: name={{epel_repo}}
#       state=absent
#   become: true
